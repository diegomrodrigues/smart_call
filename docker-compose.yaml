version: '3.8'

x-resource-limits: &resource-limits
  resources:
    limits:
      cpus: '0.5'
      memory: 50M

services:
  app:
    build: ./backend
    container_name: app
    ports:
      - "3000:3000"
    volumes:
      - ./backend:/usr/src/app
      - /usr/src/app/node_modules
    environment:
      NODE_ENV: ${NODE_ENV}
      MONGODB_URI: mongodb://mongo:27017/smart_call
    deploy:
      <<: *resource-limits
    networks:
      - backend_network
      - frontend_network
    depends_on:
      - mongo
    profiles:
      - test
      - prod

  mongo:
    image: mongo
    container_name: mongodb
    env_file:
      - .env
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongodb_data:/data/db
    deploy:
      <<: *resource-limits
    networks:
      - backend_network
    profiles:
      - dev
      - test
      - prod

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    env_file:
      - .env
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USERNAME}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USERNAME}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
    depends_on:
      - mongo
    networks:
      - backend_network
      - frontend_network
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
      <<: *resource-limits
    profiles:
      - dev
      - test
      - prod


networks:
  backend_network:
    driver: bridge
    external: false

  frontend_network:
    external: false

volumes:
  mongodb_data: